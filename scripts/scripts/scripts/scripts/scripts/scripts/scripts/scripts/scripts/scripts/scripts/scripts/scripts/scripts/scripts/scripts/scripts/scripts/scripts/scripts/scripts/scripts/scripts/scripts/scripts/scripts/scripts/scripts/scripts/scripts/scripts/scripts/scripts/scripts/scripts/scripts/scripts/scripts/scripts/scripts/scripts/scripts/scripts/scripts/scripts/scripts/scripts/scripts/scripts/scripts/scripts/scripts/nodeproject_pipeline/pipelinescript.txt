pipeline {  
    agent any  
    parameters {  
        choice(name: 'BRANCH_NAME', choices: ['master'], description: 'Choose the branch to deploy') 

    }  
    environment {  
        REMOTE_HOST = '192.168.29.130'  
        REMOTE_USER = 'root'  
        REMOTE_KEY = '/var/lib/jenkins/.ssh/maven'  
        REMOTE_PATH = '/root/node_project'  
        GIT_CREDENTIALS_ID = '0ce9cbdc-1c6e-4cb1-866b-bbec3ffb6db3'  
    }  
    stages {  
        stage('Checkout') {  
            steps {  
                script {  
                    // Checkout the specified branch using Git credentials  
                    checkout([$class: 'GitSCM', branches: [[name: "${params.BRANCH_NAME}"]],  
                    userRemoteConfigs: [[url: 'https://gitlab.com/dsp9391/node_project.git', credentialsId: "${env.GIT_CREDENTIALS_ID}"]]])  
                }  
            }  
        } 
        stage('copy files from local to remote'){  
            steps{  
                script{  
                sh"""  
                rsync -avz -e 'ssh -i ${REMOTE_KEY}' --delete ${WORKSPACE}/ ${env.REMOTE_USER}@${env.REMOTE_HOST}:${env.REMOTE_PATH}   
                """  
                }  
            }  
        }  
        stage('build node'){  
            steps{  
                script{  
                sh """  
                ssh -i ${REMOTE_KEY} root@192.168.29.130 'curl -sL https://deb.nodesource.com/setup_16.x -o /tmp/nodesource_setup.sh'  
                ssh -i ${REMOTE_KEY} root@192.168.29.130 'sudo bash /tmp/nodesource_setup.sh'  
                ssh -i ${REMOTE_KEY} root@192.168.29.130 'sudo apt-get install nodejs -y'  
                """  
                }  
            }  
        } 
        stage('npm run'){ 
            steps{ 
                script{ 
                    sh """ 
                    ssh -i ${REMOTE_KEY} root@192.168.29.130 
                    pwd 
                    sudo npm install 
                    """ 
                } 
            } 
        } 
         stage('copy node_modules from local to remote'){  
            steps{  
                script{  
                sh"""  
                rsync -avz -e 'ssh -i ${REMOTE_KEY}' --delete ${WORKSPACE}/ ${env.REMOTE_USER}@${env.REMOTE_HOST}:${env.REMOTE_PATH}   
                """  
                }  
            }  
        }
    }  
    post {  
        always {  
            echo 'Deployment completed.'  
        }  
    }  
}
