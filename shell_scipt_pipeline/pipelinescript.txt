pipeline { 

    agent any 

  

    parameters { 

        choice(name: 'BRANCH_NAME', choices: ['main', 'master'], description: 'Choose the branch to deploy') 

    } 

  

    environment { 

        REMOTE_HOST = '3.83.163.193' 

        REMOTE_USER = 'ubuntu' 

        REMOTE_KEY = '/var/lib/jenkins/.ssh/deploy' 

        REMOTE_PATH = '/home/ubuntu/project' 

        DEPLOY_PATH = '/var/www/html' 

        GIT_CREDENTIALS_ID = '0ce9cbdc-1c6e-4cb1-866b-bbec3ffb6db3' 

         

    } 

  

    stages { 

        stage('Checkout') { 

            steps { 

                script { 

                    // Checkout the specified branch using Git credentials 

                    checkout([$class: 'GitSCM', branches: [[name: "${params.BRANCH_NAME}"]], 

                              userRemoteConfigs: [[url: 'https://gitlab.com/dsp9391/oxer1-html.git', credentialsId: "${env.GIT_CREDENTIALS_ID}"]]]) 

                } 

            } 

        } 

  

        stage('install docker on aws instance') { 

            steps { 

                script { 

                    // install docker on remote aws machine 

                        sh """ 

                        ansible-playbook -i ansible/hosts --private-key /var/lib/jenkins/.ssh/deploy -u ubuntu ansible/install_docker.yml						 

                        """ 

                         

                } 

            } 

        } 

  

        stage('Deploy to Apache') { 

            steps { 

                script { 

                    // Copy files to the remote Apache server 

                        sh """ 

                        rsync -avz -e 'ssh -i ${REMOTE_KEY}'  --delete ${WORKSPACE}/ ${env.REMOTE_USER}@${env.REMOTE_HOST}:${env.REMOTE_PATH} 

                        """ 

                     

                } 

            } 

        } 

  

        stage('Install Apache2') { 

            steps { 

                script { 

                    sh ''' 

                    #!/bin/bash 

                    sudo apt-get update 

                    sudo apt-get install -y apache2 

                    sudo systemctl enable apache2 

                    sudo systemctl start apache2 

                    ''' 

                } 

            } 

        } 

         

        stage('run docker container') { 

            steps { 

                script { 

                    // run docker container 

                        sh """ 

                         

                        sudo docker pull httpd:latest 

                        sudo docker run -d --name myaws_container10 -p 8085:80 -v /home/ubuntu/project:/usr/local/apache2/htdocs httpd:latest 

                        

                         

                        """ 

                    } 

} 

            } 

  

    } 

} 
